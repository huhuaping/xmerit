% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transgg.R
\name{gg_translate}
\alias{gg_translate}
\title{Translate text from English to Chinese along data frame}
\usage{
gg_translate(df, col_key, col_trans, ggkey)
}
\arguments{
\item{df}{data frame. The names of columns should be
non-multibytes string.}

\item{col_key}{character. Which column will be kept as a
"key column", and can be used with data frame join (\code{left_join()}).}

\item{col_trans}{character. Which column will be translated.}

\item{ggkey}{character. google translate API key, which is a long
string containing upper and lower case letters, numbers,
and dashes, such as \verb{a4db08b7-5729-4ba9-8c08-f2df493465a1}.}
}
\value{
result
}
\description{
Translate text from English to Chinese along data frame
}
\examples{

df_my <- tibble::tibble(
  index = 1:3,
  target = c(
    'We recommend you use the Cloud Console to manage API keys.',
    'Your API keys are shown in the API keys section.',
    'Pass the API key into a REST API call as a query parameter with the following format.'
    )
 )
\dontrun{
result_trans <- gg_translate(
  df = df_my,
  col_key = "index",
  col_trans = "target",
  ggkey = keyring::key_get("key",keyring = "gg-trans"))
}

}
